<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>change password</title>
    <link href="https://fonts.googleapis.com/css2?family=Work+Sans:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- Add this link in the head section of your HTML to include the Font Awesome library for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
   <style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    body {
        background-color: #f5f5f5;
        min-height: 100vh;
        padding: 20px;
    }
    
    .container {
        max-width: 500px;
        margin: 0 auto;
    }
    
    .main-content {
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        padding: 30px;
        width: 100%;
        margin-top: 20px;
    }
    
    .user-icon {
        text-align: center;
        margin-bottom: 25px;
    }
    
    .user-icon i {
        font-size: 60px;
        color: #e6470d;
        background: #f8f9fa;
        padding: 20px;
        border-radius: 50%;
        border: 2px solid #e6470d;
    }
    
    .input-field {
        position: relative;
        margin-bottom: 25px;
    }
    
    .input-field label {
        position: absolute;
        top: 50%;
        left: 15px;
        transform: translateY(-50%);
        color: #777;
        pointer-events: none;
        transition: all 0.3s ease;
    }
    
    .input-field input {
        width: 100%;
        padding: 15px 40px 15px 15px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 16px;
        outline: none;
        transition: border 0.3s ease;
    }
    
    .input-field input:focus {
        border-color: #4a90e2;
    }
    
    .input-field input:focus + label,
    .input-field input:valid + label {
        top: 0;
        left: 10px;
        font-size: 12px;
        background-color: white;
        padding: 0 5px;
        color: #4a90e2;
    }
    
    .update-profile {
        text-align: center;
        margin-top: 20px;
    }
    
    .update-btn {
        display: inline-block;
        background-color: #e6470d;
        color: white;
        padding: 12px 25px;
        border-radius: 5px;
        text-decoration: none;
        font-weight: 500;
        transition: background-color 0.3s ease;
        border: none;
        cursor: pointer;
        width: 100%;
        font-size: 16px;
    }
    
    .update-btn:hover {
        background-color: #f8f9fa;
        color: #e6470d;
        border: 1px solid #e6470d;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(247, 79, 16, 0.2);
    }
    
    .back-button {
        margin-bottom: 8px;
    }

    .back-btn {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 15px 15px;
        background-color: #f8f9fa;
        color: #333;
        border: 1px solid #ddd;
        border-radius: 30px;
        cursor: pointer;
        font-size: 14px;
        font-weight: 500;
        transition: all 0.3s ease;
        text-decoration: none;
    }

    .back-btn::before {
        content: "";
        width: 8px;
        height: 8px;
        border-left: 2px solid #333;
        border-bottom: 2px solid #333;
        transform: rotate(45deg);
        transition: all 0.3s ease;
    }

    .back-btn:hover {
        background-color: #e6470d;
        color: white;
        border-color: #e6470d;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(230, 71, 13, 0.2);
    }

    .back-btn:hover::before {
        border-left: 2px solid white;
        border-bottom: 2px solid white;
    }

    .back-btn:active {
        transform: translateY(0);
        box-shadow: none;
    }
    
    .error-message {
        color: #f20505;
        font-size: 12px;
        margin-top: 5px;
        display: block;
    }
    
    .eye-icon {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        color: #777;
        z-index: 2;
    }
    
    .eye-icon:hover {
        color: #333;
    }
    
    #profile-form {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }
</style>
</head>
<body>
    <div class="container">
        <div class="back-button">
            <button class="back-btn" onclick="window.location.href='/userProfile'">Back to profile</button>
        </div>
        <div class="main-content">
            <form action="/updatedPassword" method="post" id="profile-form" onsubmit="return validateForm()">
                <div class="user-icon">
                    <i class="fas fa-user"></i>
                </div>

                <% if(errorMessage && errorMessage.general) { %>
                 <p class="error-message"><%= errorMessage.general %></p>
              <% } %>


                <div class="input-field">
                    <input type="password" id="currentPassword" name="currentPassword">
                    <label for="currentPassword" >current password</label>
                   <span class="eye-icon fas fa-eye-slash" onclick="togglePassword('currentPassword')"></span>
                  <span id="currentPassword_error" class="error-message"><%= errorMessage && errorMessage.currentPassword ? errorMessage.currentPassword : '' %></span>
                </div>
                <div class="input-field">
                    <input type="password" name="newPassword" id="newPassword" >
                    <label for="newPassword">New Password</label>
                     <span class="eye-icon fas fa-eye-slash" onclick="togglePassword('newPassword')"></span>
                     <span id="newPassword-error" class="error-message"><%= errorMessage && errorMessage.newPassword ? errorMessage.newPassword : '' %></span>
                </div>
                <div class="input-field">
                    <input type="password" name="confirmPassword" id="confirmPassword" >
                    <label for="confirmPassword">Confirm Password</label>
                     <span class="eye-icon fas fa-eye-slash" onclick="togglePassword('confirmPassword')"></span>
                     <span id="confirmPassword-error" class="error-message"><%= errorMessage && errorMessage.confirmPassword ? errorMessage.confirmPassword : '' %></span>
                </div>
                     
                <% if(errorMessage.general) { %>

                    <p class="error-message"><%= errorMessage.general %></p>
                  <% } %>
                    <button type="submit" class="update-btn">Update Profile</button>
                </div>
            </form>
        </div>
    </div>
  
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
   document.addEventListener("DOMContentLoaded", function () {
    // Find the form element
    const form = document.getElementById("profile-form");

    // Add a submit event listener to the form
    form.addEventListener("submit", function (e) {
        // First validate the form
        if (!validateForm()) {
            e.preventDefault(); // Prevent form submission if validation fails
            return;
        }
        // Prevent the default form submission
        e.preventDefault();

        // Show the SweetAlert confirmation dialog
        Swal.fire({
            title: "Change Password",
            text: "Are you sure you want to change your password?",
            icon: "question",
            showCancelButton: true,
            confirmButtonText: "Yes, change",
            cancelButtonText: "No, cancel"
        }).then((result) => {
            // If the user confirms changing the password
            if (result.isConfirmed) {
                // Submit the form (assuming the button is inside a form)
                this.closest("form").submit();
            }
        });
    });
});
</script>
  <script>
    function validateForm()
    {
       var currentPassword = document.getElementById("currentPassword").value;
       var newPassword = document.getElementById("newPassword").value;
       var confirmPassword = document.getElementById("confirmPassword").value;


       document.getElementById("currentPassword_error").innerHTML=''
       document.getElementById("newPassword-error").innerHTML=""
       document.getElementById("confirmPassword").innerHTML=""

    //    null validation
       if(!currentPassword)
       {
       document.getElementById("currentPassword_error").innerHTML='Current Password cannot be empty'
        return false
       }
       if(!newPassword)
       {
           document.getElementById("newPassword-error").innerHTML="New assword cannot be empty"
           return false
       }
       if(!confirmPassword)
       {
         document.getElementById("confirmPassword-error").innerHTML="Confirm password cannot be empty"
          return false
       }

         // White spaces validation
            if (/\s/.test(currentPassword)) {
                document.getElementById('currentPassword_error').innerText = 'Current Password cannot contain white spaces.';
                return false;
            }
    
            if (/\s/.test(newPassword)) {
                document.getElementById('newPassword-error').innerText = 'New Password cannot contain white spaces.';
                return false;
            }
             else if(!isValidPassword(newPassword))
             {
                document.getElementById('newPassword-error').innerText = 'Password must contain at least 7 characters, one uppercase letter, one number, and one special character'
                return false
             }
    
            if (/\s/.test(confirmPassword)) {
                document.getElementById('confirmPassword-error').innerText = 'Confirm Password cannot contain white spaces.';
                return false;
            }
    
            if (newPassword !== confirmPassword) {
                document.getElementById('confirmPassword-error').innerText = 'New Password and Confirm Password must match.';
                return false;
            }
    
            return true;
    }

    function togglePassword(inputid)
    {
            var passwordInput = document.getElementById(inputid);
            var icon = passwordInput.parentNode.querySelector('.eye-icon');
    
            if (passwordInput.type === "password") {
                passwordInput.type = "text";
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye");
            } else {
                passwordInput.type = "password";
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash");
            }
   }

       function isValidPassword(newPassword) {
      const passwordRegex=/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&*()_+\-=[\]{};':"\\|,.<>/?]).{7,}$/;
      return passwordRegex.test(newPassword);
    }
    </script>
</body>
</html>